openapi: 3.0.0
## removed the servers. we don't need it now as there's no more basePath. This defaults to `host-scheme://host-name`.
info:
  description: >-
    API for Rapid Pass Web Services. Guys, currently super simple pass ng API.
    Please send Merge Requests to update details. Thanks!
  version: "1.0.0-oas3"
  title: RapidPass API
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: inspector
    description: Endpoints for inspector app
  - name: pwa
    description: Endpoints for PWA/mobile registraation app
  - name: dashboard
    description: Endpoints for web console for the review and approval of requests
paths:
  /registry/access-passes:
    post:
      tags:
        - pwa
        - dashboard
      summary: >-
        Creates a request for a new RapidPass, can be for INDIVIDUAL or VEHICLE
        depending on pass type
      operationId: requestAccessPass
      description: >
        Called from the PWA or web site registration page to register a user.
        All new access passes will have a status of 'pending'.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RapidPassRequest'
        description: Rapid Pass request payload.
      responses:
        '201':
          description: Request created
          content:
            application/json:
              schema:
                type: object
                properties:
                  referenceId:
                    type: string
                    description: >-
                      backend generated reference id for the requested access
                      pass
                description: reference id of the access pass
          links:
            GetAccessPassById:
              operationId: getAccessPassById
              parameters:
                referenceId: '$response.body#/referenceId'
        '400':
          description: Invalid Input
    get:
      tags:
        - dashboard
        - inspector
      summary: Gets a list of access passes
      parameters:
        - name: status
          in: query
          required: false
          description: status of access passes to retrieve
          schema:
            type: string
        - name: validUntil
          in: query
          required: false
          description: >-
            returns a list of access passes that are valid until the specified
            date
          schema:
            type: string
      responses:
        '200':
          description: Status of the request pass
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    referenceId:
                      type: string
                    RequestPass:
                      $ref: '#/components/schemas/RapidPass'
      description: Retrieves a set of access passes based on the optional query parameters.  If there are no query parameters provide, a paginated list of access passes will be returned.
  /batch/access-passes:
    get:
      tags:
        - dashboard
        - inspector
      summary: downloads a list of access passes in csv format
      parameters:
        - name: compressed
          in: query
          description: 'specifies whether to compress the csv file or not, default is false'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Upload successful
    post:
      tags:
        - dashboard
      summary: Upload CSV/Excel file of approved control numbers TODO
      responses:
        '200':
          description: Upload successful
  /registry/control-codes:
    get:
      tags:
        - inspector
        - dashboard
      summary: Downloads a list of approved control numbers
      responses:
        '200':
          description: list of all approved control numbers
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - referenceId
                  properties:
                    referenceId:
                      type: string
                      description: 'backend generated reference id, created upon request'
                    controlCode:
                      type: string
                      description: approved control control code
                    passType:
                      type: string
                      description: type of access pass
                    plateOrId:
                      type: string
                      description: plateNumber or id of associated with access pass
  '/registry/access-passes/{referenceID}':
    get:
      operationId: getAccessPassById
      tags:
        - inspector
        - pwa
        - dashboard
      summary: Get information about an access pass
      parameters:
        - name: referenceID
          in: path
          description: >-
            Reference ID of the access pass request, mobile number for
            individuals and plate numbers for vehicles
          required: true
          schema:
            type: string
      responses:
        '200':
          description: More information on control number
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RapidPass'
    put:
      tags:
        - dashboard
      summary: Approves or Declines a Rapid Pass request
      parameters:
        - name: referenceID
          in: path
          description: >-
            Reference ID of the access pass request, mobile number for
            individuals and plate numbers for vehicles
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                referenceId:
                  type: string
                passType:
                  type: string
                plateOrId:
                  type: string
                validUntil:
                  type: string
                status:
                  type: string
      responses:
        '200':
          description: >-
            approves the Rapid Pass Request with referenced reference Number.
            Will generate a control code in system and send notifications to
            Requestor along with QR code.
          content:
            application/json:
              schema:
                type: object
                properties:
                  referenceId:
                    type: string
                    description: >-
                      backend generated reference id for the requested access
                      pass
                description: reference id of the access pass
          links:
            GetAccessPassById:
              operationId: getAccessPassById
              parameters:
                referenceId: '$response.body#/referenceId'
    delete:
      tags:
        - dashboard
      summary: Suspends an active access pass
      parameters:
        - name: referenceID
          in: path
          description: >-
            Reference ID of the access pass request, mobile number for
            individuals and plate numbers for vehicles
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            approves the Rapid Pass Request with referenced reference Number.
            Will generate a control code in system and send notifications to
            Requestor along with QR code.

  '/checkpoint/verify-plate-no/{plateNo}':
    get:
      operationId: verifyPlateNo
      tags:
        - inspector
      summary: Verify if the plate number is registered or not
      parameters:
        - name: plateNo
          in: path
          description: >-
            Vehicle's plate number
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Rapid Pass retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RapidPass'
        '404':
          description: RapidPass not found using the plate number.

  '/checkpoint/verify-control-code/{controlCode}':
    get:
      operationId: controlCode
      tags:
        - inspector
      summary: Verify if the control code is valid or not.
      parameters:
        - name: controlCode
          in: path
          description: >-
            The RapidPass's Control Code
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Rapid Pass retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RapidPass'
        '404':
          description: RapidPass not found using the control code
components:
  schemas:
    RapidPassRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/CommonElements'
      properties:
        first_name:
          type: string
          description: Type of pass being requested. Can be INDIVIDUAL or VEHICLE.
          enum:
            - INDIVIDUAL
            - VEHICLE
          example: "INDIVIDUAL"
        firstName:
          type: string
          description: The first name of the individual that will use the access pass
          example: Juan
        middleName:
          type: string
          description: The middle name of the individual that will use the access pass
          example: Mercedes
        lastName:
          type: string
          description: The last name of the individual that will use the access pass
          example: de la Cruz
        suffix:
          type: string
          description: The suffix of the individual that will use the access pass
          example: III
        company:
          type: string
          description: company of access pass holder
        idType:
          type: string
          description: >-
            for vehicles this could be plate number or conduction sticker, for
            individuals this will be the type of ID, e.g. company ID, driver's
            license, etc.
          example: passport
        identifierNumber:
          type: string
          description: plate number of vehicle or ID of individual
          example: VV1234567
        mobileNumber:
          type: string
          description: mobile number of access pass holder
          example: '+639991230000'
        email:
          type: string
          description: email address of access pass holder
          example: jdelacruz@some-email.com
        originName:
          type: string
          description: source company name
          example: Acme Inc.
        originStreet:
          type: string
          description: source street address
          example: '123 Somewhere Ave'
        originCity:
          type: string
          description: source city
          example: 'Makati City'
        destName:
          type: string
          description: destination location
          example: Zuelig Building
        destStreet:
          type: string
          description: destination street address
          example: 'Paseo de Roxas'
        destCity:
          type: string
          description: source city
          example: 'Makati City'
        remarks:
          type: string
          description: additional remarks
          example: will buy groceries
    RapidPass:
      type: object
      allOf:
        - $ref: '#/components/schemas/CommonElements'
        - properties:
            name:
              type: string
              description: name of the person the acess pass is assigned to (first name + last name + suffix)
            controlCode:
              type: string
              description: generated identifer for approved requests
            referenceId:
              type: string
              description: used for searching the access pass, either the plate number or ID of the individual
            status:
              type: string
              description: status of the access pass
              enum: [PENDING, APPROVED, DECLINED]
            validFrom:
              type: string
              description: start date of the access pass's validity period
            validUntil:
              type: string
              description: expiration date of the access pass
    CommonElements:
      type: object
      properties:
        aporType:
          type: string
          description: Code for Authorized Personnel Outside Residence. Check IATF doc for details.
          enum: [AG,BA,BP,CA,DC,DO,ER,FC,FS,GO,GR,HM,HT,IP,LW,ME,MS,MF,MT,PH,PM,PI,SH,SS,TF,UT,VE]
          example: "AG"
        passtype:
          type: string
          description: type of pass, either vehicle or individual
