openapi: 3.0.0
# Added by API Auto Mocking Plugin

## The server is set to a relative path so when a swagger ui instance reads this, it will use the host + this relative
## path. this path should be the same as the base path of the api.
servers:
  - url: /api/v1/
info:
  description: API for Rapid Pass Web Services. Guys, currently super simple pass ng API. Please send Merge Requests to update details. Thanks!
  version: "1.0.0"
  title: RapidPass API
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: checkpoint
    description: Endpoints for inspector app which is mainly used at checkpoints.
  - name: registry
    description: Endpoints for registring rapidpass users. Also the main API for PWA/mobile end-user app
  - name: dashboard
    description: Endpoints for approval applications

paths:
  /registry/access-passes:
    post:
      tags:
        - registry
      summary: Creates a request for a new RapidPass, can be for individual or vehicle depending on pass type
      operationId: requestAccessPass
      description: |
        Called from the PWA or web site registration page to register a user.  All new access passes will have a status of 'pending'.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RapidPassRequest'
        description: Rapid Pass request payload.
      responses:
        '201':
          description: Request created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
          links:
            GetAccessPassById:
              operationId: getAccessPassById
              parameters:
                referenceId: '$response.body#/referenceId'
        '400':
          description: Invalid Input
    get:
      tags:
        - registry
      summary: Gets a list of access passes
      operationId: getAccessPasses
      parameters:
        - name: status
          in: query
          required: false
          description: status of access passes to retrieve
          schema:
            type: string
        - name: validUntil
          in: query
          required: false
          description: returns a list of access passes that are valid until the specified date
          schema:
            type: string
      responses:
        '200':
          description: Status of the request pass
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessPasses'

  /dashboard/access-passes:
    put:
      tags:
        - dashboard
      summary: Approves or Declines a Rapid Pass request
      operationId: updateAccessPassStatus
      parameters:
        - name: referenceID
          in: path
          description: Reference ID of the access pass request, mobile number for individuals and plate numbers for vehicles
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessPass'

      responses:
        '200':
          description: approves the Rapid Pass Request with referenced reference Number. Will generate a control code in system and send notifications to Requestor along with QR code.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
          links:
            GetAccessPassById:
              operationId: getAccessPassById
              parameters:
                referenceId: '$response.body#/referenceId'
    delete:
      tags:
        - dashboard
      summary: Suspends an active access pass
      operationId: deleteAccessPass
      parameters:
        - name: referenceID
          in: path
          description: Reference ID of the access pass request, mobile number for individuals and plate numbers for vehicles
          required: true
          schema:
            type: string
      responses:
        '200':
          description: approves the Rapid Pass Request with referenced reference Number. Will generate a control code in system and send notifications to Requestor along with QR code.

  /dashboard/access-passes/batch-approve:
    post:
      tags:
        - dashboard
      summary: Upload CSV/Excel file of approved control numbers TODO
      operationId: approveBatchOfAccessPasses
      requestBody:
        description: batch of RapidPassRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RapidPassRequests'
      responses:
        '200':
          description: Upload successful

  /dashboard/control-codes:
    get:
      tags:
        - dashboard
      summary: Downloads a list of approved control numbers
      operationId: retrieveApprovedControlCodes
      responses:
        '200':
          description: list of all approved control numbers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControlCodes'

  /registry/access-passes/{referenceID}:
    get:
      operationId: getAccessPassById
      tags:
        - registry
      summary: Get information about an access pass
      parameters:
        - name: referenceID
          in: path
          description: Reference ID of the access pass request, mobile number for individuals and plate numbers for vehicles
          required: true
          schema:
            type: string
      responses:
        '200':
          description: More information on control number
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessPass'

  /checkpoint/access-pass/verify-qr/{qrCode}:
    get:
      operationId: getAccessPassByQrCode
      tags:
        - checkpoint
      summary: Get access pass using QR Code to check if it is valid pass
      parameters:
        - name: qrCode
          in: path
          description: QR Code to retrieve
          required: true
          schema:
            type: string
      responses:
        200:
          description: Access Pass retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessPass'
        404:
          description: QR Code not found or not valid

  /checkpoint/access-pass/verify-plate-no/{plateNo}:
    get:
      operationId: getAccessPassByPlateNumber
      tags:
        - checkpoint
      summary: Get access pass using Plate Number to check if it is valid pass
      parameters:
        - name: plateNo
          in: path
          description: Get Access Pass using Plate number
          required: true
          schema:
            type: string
      responses:
        200:
          description: Access Pass retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessPass'
        404:
          description: Plate number not found or not valid

  /checkpoint/access-pass/verify-control-code/{controlCode}:
    get:
      operationId: getAccessPassByControlCode
      tags:
        - checkpoint
      summary: Get access pass using Control Code to check if it is valid pass
      parameters:
        - name: controlCode
          in: path
          description: Control Code to use on retrievinv the access pass
          required: true
          schema:
            type: string
      responses:
        200:
          description: Access Pass retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessPass'
        404:
          description: Plate number not found or not valid

components:
  schemas:
    RapidPassRequest:
      type: object
      properties:
        passType:
          $ref: '#/components/schemas/PassRequestType'
        accessType:
          $ref: '#/components/schemas/APORType'
        firstName:
          type: string
          description: firstname of individual that will use the access pass
          example:
            Juan
        middleName:
          type: string
          description: middleName of individual that will use the access pass
          example:
            Dipahuhuli
        lastName:
          type: string
          description: lastName of individual that will use the access pass
            Dimaunahan
        suffix:
          type: string
          description: Name i.e. Jr. the III
          example:
            Jr.
        company:
          type: string
          description: company of access pass holder
        idType:
          $ref: '#/components/schemas/IdentificationType'
        identificationNumber:
          type: string
          description: Identification number depending on the idType
        mobileNumber:
          type: string
          description: mobile number of access pass holder
        email:
          type: string
          description: email address of access pass holder
        originAddress:
          $ref: '#/components/schemas/Address'
        destAddress:
          $ref: '#/components/schemas/Address'
        remarks:
          type: string
          description: Reason why the pass is needed
          example:
            To deliver medical supplies
        status:
          $ref: '#/components/schemas/AccessPassStatus'

    AccessPass:
      allOf:
        - $ref: '#/components/schemas/RapidPassRequest'
      type: object
      properties:
        controlCode:
          $ref: '#/components/schemas/ControlCode'
        validUntil:
          type: string
          format: date
          description: expiration date of the access pass
        lastUsed:
          type: string
          format: 'date-time'
          description: Date and Time it was last used.
        approvedBy:
          type: string
          description: Name of the approving organization

    ControlCodes:
      type: array
      items:
        $ref: '#/components/schemas/ControlCode'

    ControlCode:
      type: object
      required:
        - referenceId
      properties:
        referenceId:
          type: string
          description: backend generated reference id, created upon request
        controlCode:
          type: string
          description: approved control control code
        passType:
          $ref: '#/components/schemas/PassRequestType'

    Link:
      type: object
      description: URL  to the resource already created in the back end.
      properties:
        href:
          type: string
          example: /{resource} . . .
        templated:
          type: boolean

    AccessPasses:
      type: array
      items:
        type: object
        properties:
          referenceId:
            type: string
          accessPass:
            $ref: '#/components/schemas/AccessPass'

    RapidPassRequests:
      type: array
      items:
        $ref: '#/components/schemas/RapidPassRequest'

    PassRequestType:
      description: Pass Request Type
      type: string
      enum:
        - INDIVIDUAL
        - VEHICLE
    AccessPassStatus:
      type: string
      enum:
        - APPROVED
        - DENIED
        - PENDING
      description: status of the access pass

    Address:
      type: object
      properties:
        street:
          type: string
          description: street address
          example: 1 out of nowhere
        city:
          type: string
          description: city
          example: sin city
        region:
          type: string
          description: region where
          example: Metro Manila
        zip:
          type: string
          description: zip code
          example: 12343D
        country:
          $ref: '#/components/schemas/Country'

    Country:
      type: object
      properties:
        code:
          type: string
          description: Country Code
          example: PH
        name:
          type: string
          description: Country name
          example: Philippines
    IdentificationType:
      type: string
      description: for vehicles this could be plate number or conduction sticker, for individuals this will be the type of ID, e.g. company ID, driver's license, etc.
      enum:
        - PersonalID
        - VehicleID
    APORType:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Primary key of APOR type
        name:
          type: string
          description: Name of APOR type
          example:
            Medical