openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/jonasespelita/rapidpass-api/1.0.0
info:
  description: API for Rapid Pass Web Services. Guys, currently super simple pass ng API. Please send Merge Requests to update details. Thanks!
  version: "1.0.0"
  title: RapidPass API
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: inspector
    description: Endpoints for inspector app
  - name: pwa
    description: Endpoints for PWA/Web application
  - name: registry
    description: Endpoints for approval applications

paths:
  /api/v1/pwa/requestPass:
    post:
      tags:
        - pwa
      summary: Creates a new request for a new RapidPass Pass. Can be for individual or vehicle depending on pass type
      operationId: register
      description: |
        Called from the PWA or web site registration page to register a user
      responses:
        '201':
          description: Request created
        '400':
          description: Invalid Input
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewRapidPassRequest'
        description: Rapid Pass request payload.
    get:
      tags:
        - pwa
      summary: Gets the status of a request pass
      parameters:
        - name: plateNum
          in: query
          required: false
          schema:
            type: string
        - name: mobileNum
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Status of the request pass
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: status of request
        '400':
          description: Request Pass not found.

  /api/v1/registry/pendingPasses:
    get:
      tags:
        - registry
      summary: Gets list of the pending passes that is authorized for the caller. TODO! filtering
      parameters:
        - name: accessType
          description: access type of RapidPass requests to get. If null return all pending passes that is authorized for caller.
          in: query
          required: false
          schema:
            type: string
      description: Retrieves all the pending request pass for particular access type
      responses:
        '200':
          description: List of all rapid pass requests for approval
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RapidPassRequest'
  /api/v1/registry/approvedPasses:
    get:
      tags:
        - registry
      summary: Gets the list of approved passes that is authorized for the caller. TODO! filtering
      parameters:
        - name: accessType
          description: access type of RapidPass requests to get. If null return all pending passes that is authorized for caller.
          in: query
          required: false
          schema:
            type: string
      description: Retrieves all the pending request pass for particular access type
      responses:
        '200':
          description: List of all rapid pass requests for approval
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApprovedRapidPass'
  /api/v1/registry/approvePass:
    post:
      tags:
        - registry
      summary: Approves a Rapid Pass request
      parameters:
        - name: referenceNumber
          description: Reference number of Rapid Pass request
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: approves the Rapid Pass Request with referenced reference Number. Will generate a control code in system and send notifications to Requestor along with QR code.
  /api/v1/registry/uploadControlNums:
    post:
      tags:
        - registry
      summary: Upload CSV/Excel file of approved control numbers TODO
      responses:
        '200':
          description: Upload successful
  /api/v1/inspector/downloadControlNums:
    get:
      tags:
        - inspector
      summary: Downloads a list of all approved control numbers
      responses:
        '200':
          description: list of all approved control numbers
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - controlNum
                  properties:
                    controlNum:
                      type: string
                      description: approved control number
                    name:
                      type: string
                      description: name of approved pass
                    plateNum:
                      type: string
                      description: plateNumber of approved pass
  /api/v1/inspector/accessPass/{controlNum}:
    get:
      tags:
        - inspector
      summary: Downloads more information about a control number
      parameters:
        - name: controlNum
          description: Control number to get more info on
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: More information on control number
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ApprovedRapidPass'

components:
  schemas:
    NewRapidPassRequest:
      type: object
      properties:
        passType:
          type: string
          description: Type of pass being requested. Can be individual or vehicle
        name:
          type: string
          description: Name of individual
        plateNum:
          type: string
          description: Plate Number of vehicle
        mobileNumber:
          type: string
          description: Mobile number of individual
        email:
          type: string
        destAddress:
          type: string
        company:
          type: string
        accessType:
          type: string
          description: Type of access needed. This is tied to gov agency that will approve pass

        remarks:
          type: string

    RapidPassRequest:
      allOf:
        - $ref: '#/components/schemas/NewRapidPassRequest'
        - properties:
            referenceNumber:
              type: string
              description: Backend only reference number. Populated by backend. Only generated when a pass has been successfuly requested.
      type: object
    ApprovedRapidPass:
      allOf:
        - $ref: '#/components/schemas/NewRapidPassRequest'
        - properties:
            controlNumber:
              type: string
              description: Backend only control number. Populated by backend. This is used to create QR codes
      type: object