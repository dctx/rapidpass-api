stages:
  - build
  - package
  - deploy

build-jar:
  stage: build
  image: openjdk:15-jdk-alpine
  script:
  - ./mvnw package
  artifacts:
    paths:
    - target/

package-image:
  stage: package
  image: docker:19.03.1
  services:
  - docker:19.03.1-dind
  variables:
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
  - docker login -u ${DOCKERHUB_USERNAME} -p ${DOCKERHUB_PASSWORD}
  # get cached build step create new cache and push
  - docker pull dctx/rapidpass-api:cache
  - docker build --target build --cache-from=dctx/rapidpass-api:cache -t dctx/rapidpass-api:cache .
  - docker push dctx/rapidpass-api:cache
  # get latest image
  - docker pull dctx/rapidpass-api:latest
  script:
  - docker build --cache-from=dctx/rapidpass-api:cache,dctx/rapidpass-api:latest -t dctx/rapidpass-api:latest .
  - docker push dctx/rapidpass-api:latest
  only:
  - develop
  dependencies:
  - build-jar

deploy-dev:
  stage: deploy
  image: lwolf/helm-kubectl-docker:v1.16.2-v2.15.2
  before_script:
  - helm init --client-only  
  - helm repo add bitnami https://charts.bitnami.com/bitnami
  - mkdir -p ~/.kube
  - cp ${KUBECONFIG} ~/.kube/config
  script:
  - helm dep update helm/rapidpass-api
  - helm upgrade rapidpass-api-dev --install --namespace rapidpass-api-dev --values config/dev-values.yaml helm/rapidpass-api
  only:
  - develop

deploy-test:
  stage: deploy
  image: lwolf/helm-kubectl-docker:v1.16.2-v2.15.2
  before_script:
  - helm init --client-only  
  - helm repo add bitnami https://charts.bitnami.com/bitnami
  - mkdir -p ~/.kube
  - cp ${KUBECONFIG} ~/.kube/config
  script:
  - helm dep update helm/rapidpass-api
  - helm upgrade rapidpass-api-test --install --namespace rapidpass-api-test --values config/test-values.yaml helm/rapidpass-api
  when: manual
  only:
  - develop
